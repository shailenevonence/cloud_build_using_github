steps:
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud compute ssh git-gcp-vm \
        --zone=us-central1-a \
        --project=$PROJECT_ID \
        --command='sudo apt update' \
        --command='sudo apt upgrade -y' \
        --command='sudo apt install php -y'
    env:
      - 'LOGGING_OPTION=CLOUD_LOGGING_ONLY'
  - name: 'gcr.io/cloud-builders/git'
    args: ['clone', 'https://github.com/shailenevonence/cloud_build_using_github.git', '/workspace/repo']
  - name: 'ubuntu'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        rm /workspace/repo/cloudbuild.yaml
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
        if [ "$BRANCH_NAME" == "evonence" ]; then
          echo "Hello World ! Evonence" > /workspace/repo/app.py
        elif [ "$BRANCH_NAME" == "master" ]; then
          echo "Hello World ! Master" > /workspace/repo/app.py
        elif [ "$BRANCH_NAME" == "ncorium" ]; then
          echo "Hello World ! Ncorium" > /workspace/repo/app.py
        else
          echo "Hello World ! Unknown Branch" > /workspace/repo/app.py
        fi
        gcloud builds submit --tag gcr.io/$PROJECT_ID/my-app /workspace/repo
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud components install docker-credential-gcr
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/my-app'
      - '.'
    dir: '/workspace/repo'
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/my-app'
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'compute'
      - 'instances'
      - 'add-tags'
      - 'git-gcp-vm'
      - '--tags=allow-docker'
      - '--zone=us-central1-a'
      - '--project=$PROJECT_ID'
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'compute'
      - 'ssh'
      - 'git-gcp-vm'
      - '--zone=us-central1-a'
      - '--project=$PROJECT_ID'
      - '--command=docker run -d -p 5000:5000 gcr.io/$PROJECT_ID/my-app'
logsBucket: onramp-sample-bucket
